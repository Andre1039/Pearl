try{new class{constructor(a){this.menu=document.querySelector(a.menu),this.btn=document.querySelector(a.btn),this.header=document.querySelector(a.header),this.headerHover=document.querySelector(a.headerHover),this.content=document.querySelector(a.content),this.btn.addEventListener("click",()=>this.showOrHide(this.btn)),this.headerHover.addEventListener("click",()=>this.showOrHide(this.headerHover)),this.width=this.header.clientWidth-this.menu.clientWidth,this.height=this.header.clientHeight,this.headerHover.style=`
                width: ${this.width}px;
                height: ${this.height}px;
                display: none;
                position: absolute;
                top: 0;
                right: 0;
            `}showOrHide(a){a==this.btn?(this.menu.style.left="0",this.content.style.display="none",this.headerHover.style.display="block"):a==this.headerHover&&(this.menu.style.left="-100%",this.content.style.display="flex",this.headerHover.style.display="none")}}({menu:".header__menu ",btn:".header__menu-btn",headerHover:".header__hover",content:".header__content",header:".header"})}catch(a){console.log(a)}try{const a=document.querySelectorAll(".main__card-slider"),b=document.querySelectorAll(".main__card-slide"),c=document.querySelectorAll(".main__card-btn"),d=document.querySelector(".main__card-left");let e="X",f=d.clientWidth,g=d.clientHeight,h=f;a.style=`
        height: 100%;
        overflow: hidden;
        position: relative;
    `;for(let a=0;a<b.length;a++)b[a].style=`
        position: absolute;
        width: ${this.width}px;
        height: ${this.height}px;
    `,a!=0&&(b[a].style.transform=`translate${e}(${h}px)`),a==b.length-1&&(b[a].style.transform=`translate${e}(${-h}px)`);for(let d=0;d<c.length;d++)c[d].addEventListener("click",()=>{let a=c[d].getAttribute("data-atr");for(let d=0;d<c.length;d++)d<a?b[d].style.transform=`translate${e}(${-h}px)`:d>a&&(b[d].style.transform=`translate${e}(${h}px)`);b[a].style.transform=`translate${e}(0px)`,b[a].style.transition="1000ms";for(let a=0;a<c.length;a++)c[a].classList.remove("active");c[d].classList.add("active")}),a.forEach(a=>{a.style=`
        height: 100%;
        overflow: hidden;
        position: relative;
    `})}catch(a){console.log(a)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
